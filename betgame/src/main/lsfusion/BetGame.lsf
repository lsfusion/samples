//#module
MODULE WorldCup2014;
//#module end
REQUIRE Authentication, Time, Icon;

CLASS Team 'Team';
name 'Name' = DATA ISTRING[50] (Team) IN id;

FORM team 'Team'
    OBJECTS t = Team PANEL
    PROPERTIES(t) name
    
    EDIT Team OBJECT t
;

FORM teams 'Teams'
    OBJECTS t = Team
    PROPERTIES(t) READONLY name
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE 
    
    LIST Team OBJECT t
;

CLASS Match 'Match';
dateTime 'Match start' = DATA DATETIME (Match) NONULL IN id;
started (Match m) = dateTime(m) < currentDateTime();

CONSTRAINT CHANGED(dateTime(Match m)) AND PREV(dateTime(m)) AND NOT DROPPED(m IS Match) MESSAGE 'It is forbidden to change the start time of the match';

homeTeam 'Hosts' = DATA Team (Match) NONULL;
nameHomeTeam 'Hosts' (Match m) = name(homeTeam(m)) IN id; 

awayTeam 'Guests' = DATA Team (Match) NONULL;
nameAwayTeam 'Guests' (Match m) = name(awayTeam(m)) IN id; 

homeScore 'Result (hosts)' = DATA INTEGER (Match);
awayScore 'Result (guests)' = DATA INTEGER (Match);

homeScore 'Bet (hosts)' = DATA INTEGER (Match, CustomUser);
awayScore 'Bet (guests)' = DATA INTEGER (Match, CustomUser);

home 'Victory (hosts)' (Match m) = (GROUP SUM 1 IF homeScore(m, CustomUser c) > awayScore(m, c)) IF started(m);   
tie 'Draw' (Match m) = (GROUP SUM 1 IF homeScore(m, CustomUser c) = awayScore(m, c)) IF started(m);
away 'Victory (guests)' (Match m) = (GROUP SUM 1 IF homeScore(m, CustomUser c) < awayScore(m, c)) IF started(m);

startedHomeScore 'Bet (hosts)' (Match m, CustomUser c) = homeScore(m, c) IF started(m);  
startedAwayScore 'Bet (hosts)' (Match m, CustomUser c) = awayScore(m, c) IF started(m);  

hasBet 'Bet made' (Match m, CustomUser c) = homeScore(m, c) AND awayScore(m, c);
countBets 'Number of bets' (Match m) = GROUP SUM 1 IF hasBet(m, CustomUser c); 

CONSTRAINT DROPPED(Match m IS Match) AND PREV(countBets(m)) MESSAGE 'It is forbidden to delete a match on which bets were made';

CONSTRAINT CHANGED(homeScore(Match m, CustomUser c)) AND started(m) MESSAGE 'It is forbidden to change the result of a started match';
CONSTRAINT CHANGED(awayScore(Match m, CustomUser c)) AND started(m) MESSAGE 'It is forbidden to change the result of a started match';

CONSTRAINT CHANGED(homeScore(Match m)) AND NOT started(m) MESSAGE 'It is forbidden to change the match score before the match start';
CONSTRAINT CHANGED(awayScore(Match m)) AND NOT started(m) MESSAGE 'It is forbidden to change the match score before the match start';

currentHomeScore 'Bet (hosts)' (Match m) = homeScore(m, currentUser()); 
currentAwayScore 'Bet (guests)' (Match m) = awayScore(m, currentUser());

changeCurrentHomeScore (Match m)  { 
    FOR CustomUser u = currentUser() DO
        INPUT =homeScore(m, u) CHANGE;
}

changeCurrentAwayScore (Match m)  { 
    FOR CustomUser u = currentUser() DO
        INPUT =awayScore(m, u) CHANGE;
}

// Points calculation

cost 'Cost' = DATA INTEGER (Match);

correctScore (Match m, CustomUser c) = homeScore(m, c) == homeScore(m) AND awayScore(m, c) == awayScore(m); 
correctScore 'Correct score' (CustomUser c) = GROUP SUM 1 IF correctScore (Match m, c);
 
correctDelta (Match m, CustomUser c) = homeScore(m, c) - awayScore(m, c) == homeScore(m) -  awayScore(m); 
correctDelta 'Correct difference' (CustomUser c) = GROUP SUM 1 IF correctDelta (Match m, c);

correctResult (Match m, CustomUser c) = (homeScore(m, c) - awayScore(m, c)) * (homeScore(m) -  awayScore(m)) > 0 OR 
                                      (homeScore(m, c) == awayScore(m, c) AND homeScore(m) == awayScore(m)); 
correctResult 'Correct result' (CustomUser c) = GROUP SUM 1 IF correctResult (Match m, c);

points 'Number of points' = CASE
                                            WHEN correctScore(Match m, CustomUser c) THEN 3
                                            WHEN correctDelta(m, c) THEN 2
                                            WHEN correctResult(m, c) THEN 1;

points 'Number of points' (CustomUser c) = GROUP SUM points(Match m, c); 
points 'Number of points' (Match m) = GROUP SUM points(m, CustomUser c);
pointsStarted 'Number of points' (Match m) = points(m) IF started(m); 

score 'Number of points' (Match m, CustomUser c) = NUMERIC[16,4](cost(m) * points(m, c)) / points(m);
  
score 'Number of points' (CustomUser c) = GROUP SUM score(Match m, c); 


FORM match 'Match'
    OBJECTS m = Match PANEL
    PROPERTIES(m) cost, dateTime, nameHomeTeam, nameAwayTeam, homeScore, awayScore
    EDIT Match OBJECT m
;

DESIGN match {
    GROUP(,m) {
        lines = 1;
    }
}

backgroundScore = RGB(255, 224, 224);
backgroundBet = RGB(224, 224, 255);
FORM matches 'Bets'
    OBJECTS m = Match
    PROPERTIES(m) READONLY cost, dateTime, nameHomeTeam, nameAwayTeam
    PROPERTIES(m) BACKGROUND backgroundScore() READONLY homeScore, awayScore, pointsStarted
    PROPERTIES(m) BACKGROUND backgroundBet() countBets, home, tie, away, currentHomeScore ON CHANGE changeCurrentHomeScore(m), currentAwayScore ON CHANGE changeCurrentAwayScore(m)
    PROPERTIES(m) NEWSESSION NEW, EDIT, DELETE 
    
    OBJECTS c = CustomUser GRID
    PROPERTIES(c) READONLY name[Contact]
    PROPERTIES(m, c) READONLY hasBet
    PROPERTIES(m, c) SHOWIF started(m) READONLY BACKGROUND backgroundScore() points, score 
    PROPERTIES(m, c) SHOWIF started(m) READONLY BACKGROUND backgroundBet() homeScore, awayScore
;


FORM standings 'Table'
    OBJECTS c = CustomUser GRID
    PROPERTIES(c) READONLY name[Contact], correctScore, correctDelta, correctResult, points, score
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE 
    
    OBJECTS m = Match GRID
    PROPERTIES(m) READONLY cost, dateTime, nameHomeTeam, nameAwayTeam
    PROPERTIES(m) BACKGROUND backgroundScore() READONLY homeScore, awayScore, pointsStarted

    PROPERTIES(m, c) READONLY BACKGROUND backgroundScore() points, score 
    PROPERTIES(m, c) READONLY BACKGROUND backgroundBet() startedHomeScore, startedAwayScore

    ORDERS score(c) DESC 
;

NAVIGATOR {
    NEW matches;
    NEW standings;
    NEW teams;
} 