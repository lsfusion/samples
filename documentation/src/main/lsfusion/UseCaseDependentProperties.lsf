MODULE UseCaseDependentProperties;

CLASS Country 'Country';
name 'Name' = DATA ISTRING[100] (Country) IN id;

CLASS Region 'Region';
name 'Name' = DATA ISTRING[100] (Region) IN id;

country 'Country' = DATA Country (Region) NONULL DELETE;
nameCountry 'Country' (Region r)= name(country(r)) IN id;

CLASS City 'City';
name 'Name' = DATA ISTRING[100] (City);

country 'Country' = DATA Country (City) NONULL DELETE;
nameCountry (City c) = name(country(c));

region 'Region' = DATA Region (City);
nameRegion (City c) = name(region(c));

FORM cities 'Cities'
    OBJECTS c = City
    PROPERTIES(c) name, nameCountry, nameRegion, NEW, DELETE
; 

NAVIGATOR {
    NEW cities;
}

CONSTRAINT country(City c) != country(region(c)) CHECKED BY region[City] MESSAGE 'The country of the city region must match the country of the city';

WHEN LOCAL CHANGED(region(City c)) AND NOT CHANGED(country(c)) DO {
    country(c) <- country(region(c));
}

CONSTRAINT region(City c) AND NOT country(c) = country(region(c)) CHECKED BY region[City] MESSAGE 'The country of the city region must match the country of the city';

WHEN LOCAL CHANGED(country(City c)) AND country(c) != country(region(c)) DO {
    region(c) <- NULL;
}

// 1 option
WHEN SETCHANGED(country(region(City c))) DO
    country(c) <- country(region(c));
    
// 2 option
WHEN SETCHANGED(country(Region r)) DO
    country(City c) <- country(r) WHERE region(c) = r;     
